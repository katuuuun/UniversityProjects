.data
    prompt: .asciiz "Enter number: "
    result_msg: .asciiz "Sum: "

.text
.globl main

main:
    # Выводим приглашение для ввода числа
    li $v0, 4           # Системный вызов для вывода строки
    la $a0, prompt      # Загружаем адрес строки в $a0
    syscall             # Вызываем систему для вывода строки

    # Вводим число с клавиатуры
    li $v0, 5           # Системный вызов для ввода целого числа
    syscall             # Вызываем систему для ввода числа
    move $t0, $v0       # Сохраняем введенное число в $t0

    # Инициализируем сумму цифр нулем
    li $t1, 0           # Сумма цифр будет храниться в $t1
    li $t6, 10
compute_sum:
    # Вычисляем остаток от деления на 10
    div $t0, $t6         # Делим содержимое $t0 на 10
    mfhi $t2            # Получаем остаток от деления и сохраняем в $t2

    # Добавляем остаток к сумме
    add $t1, $t1, $t2   # Добавляем остаток к сумме в $t1

    # Делим число на 10
    mflo $t0            # Сохраняем результат деления (целую часть) в $t0

    # Проверяем, равно ли число нулю
    bnez $t0, compute_sum  # Если $t0 != 0, то повторяем вычисления

    # Выводим результат
    li $v0, 4           # Системный вызов для вывода строки
    la $a0, result_msg  # Загружаем адрес строки в $a0
    syscall             # Вызываем систему для вывода строки

    li $v0, 1           # Системный вызов для вывода целого числа
    move $a0, $t1       # Передаем значение суммы в $a0
    syscall             # Вызываем систему для вывода суммы

    # Завершаем программу
    li $v0, 10          # Системный вызов для выхода из программы
    syscall             # Вызываем систему для выхода
